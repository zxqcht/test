#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define INFINITY 9999
#define Num 100
void kaishidaohang1();
void kaishidaohang2();
void daohanglan();
int map[150][150],book[150],dis[150],pre[100][100],dist[100][100],path[100][100];
int cc=7,hh=8;
int shortest[Num][Num];
int path[Num][Num];

struct jingdian
{
	char name[100];
	char jieshao[999];
}q[100];


void run()
{
   int system(const char *cmdline);
   system("Python C:\\Users\\陈昊天\\PycharmProjects\\pythonProject4\\main.py");
}
void init()
{
	int i,j;
	strcpy(q[1].name,"校门口");
	strcpy(q[1].jieshao,"不远处有公交站");
	strcpy(q[2].name,"A座教学楼");
	strcpy(q[2].jieshao,"河北大学A座教学楼是学生们学习的殿堂，是学生们汲取知识的地方");
	strcpy(q[3].name,"B座教学楼");
	strcpy(q[3].jieshao,"河北大学B座教学楼是学生们做实验的地方，同时也是老师们的办公区");
	strcpy(q[4].name,"邯郸音乐厅");
	strcpy(q[4].jieshao,"一个有文学气息的音乐厅");
	strcpy(q[5].name,"图书馆");
	strcpy(q[5].jieshao,"河北大学图书馆是学生们丰富知识的地方，可以借阅各种图书，还有自习室，电子阅览室");
	strcpy(q[6].name,"操场");
	strcpy(q[6].jieshao,"风雨操场有塑胶跑道，足球场，排球场，篮球场");
	strcpy(q[7].name,"体育馆");
	strcpy(q[7].jieshao,"河北大学体育馆里面有游泳场地，排球场地，羽毛球场地，乒乓球场地，数不胜数");
	strcpy(q[8].name,"坤舆湖");
	strcpy(q[8].jieshao,"载万物如舆，故名坤舆");
	for(i=1;i<=hh;i++)
		for(j=1;j<=hh;j++)
		{
			if(i==j)
				map[i][j]=0;
			else
				map[i][j]=INFINITY;
		}
	map[1][2]=200;map[1][6]=150;
	map[2][1]=200;map[2][3]=400;map[2][5]=310;map[2][6]=500;
	map[3][2]=400;map[3][4]=250;map[3][7]=500;
	map[4][3]=250;map[4][7]=250;
	map[5][2]=310;map[5][7]=310;
	map[6][1]=150;map[6][2]=500;map[6][7]=400;
	map[7][3]=500;map[7][4]=250;map[7][5]=310;map[7][6]=400;
	map[2][8]=600;
	for(i=1;i<=hh;i++)
		for(j=1;j<=hh;j++)
			map[j][i]=map[i][j];

}

void line(void)
{
   while (getchar()!='\n')
   	continue;
}

void liebiao()			//景点列表
{
    int mm;
	system("cls");			//清屏
	printf("\n");
	printf("|***************************************************************************************************************|\n");
	printf("可选择的位置有：1. 校门口  2. A座教学楼  3. B座教学楼  4. 邯郸音乐厅  5，图书馆   6. 操场\n");
	printf("                7. 体育馆  8.坤舆湖");
	if(hh>8){
        for(mm=9;mm<=hh;mm++){
            printf("  %d.%s",mm,q[mm].name);
        }
	}
    printf("\n");
	printf("|***************************************************************************************************************|\n");
}

//查询方式
int chaxunfangshi(int x)
{
	int i;
	system("cls");
	printf("\n");
	printf("\t\t\t\t\t                    *请输入查询方式*\n\n");
	printf("\t\t\t\t\t                  1、输入景点编号查询\n\n");
	printf("\t\t\t\t\t                  2、输入景点名称查询\n\n");
	printf("\t\t\t\t\t                  0、返回上一界面\n\n\n\n\n\n\n");
	scanf("%d",&i);
	return i;
}

//查询景点编号
int bianhao(char s[])
{
	int i;
	for(i=1;i<=hh;i++)
	{
		if(strcmp(q[i].name,s)==0)
			return i;
	}
	return -1;
}


void floyd()
{
	int i=1,j=1,k=1,l=1;
	for(i=1;i<=7;i++)
	{
		for(j=1;j<=7;j++)
		{
			shortest[i][j]=map[i][j];
			path[i][j]=0;
		}
	}
	for(k=1;k<=7;k++)
	{
	    for(i=1;i<=7;i++)
	    {
	    	for(j=1;j<=7;j++)
			{
				 if(shortest[i][j]>(shortest[i][k]+shortest[k][j]))
				 {
				 	shortest[i][j]=(shortest[i][k]+shortest[k][j]);
					 path[i][j]=path[j][i]=k;
				 }
			}
		}
	}
 }
void show(int i,int j)//显示最短路径及长度。
{

    int k=0,a=i,b=j;
    if(shortest[i][j]!=INFINITY)
	{
        printf("从%s到%s的最短路径为:\n",q[i].name,q[j].name);
		printf("%s",q[i].name);
        while(path[i][j]!=0)
        {

            k=path[i][j];
            while(path[i][k]!=0)
            {
                k=path[i][k];
            }
            printf("----%s",q[k].name);
            i=k;
        }
        printf("----%s;\n",q[j].name );
        printf("最短距离为：%d米.\n",shortest[a][b]);
    }
    else
        printf("从%s不能到达%s.",q[i].name ,q[j].name );
}


void Dijkstra(int v0,int s)
{
	int min,i,j,u,v;
	int p[110],l[110];
	memset(p,0,sizeof(p));
	memset(l,0,sizeof(l));
	memset(book,0,sizeof(book));
	for(i=1;i<=hh;i++)
	{
		dis[i]=map[v0][i];
		if(dis[i]<INFINITY)
			p[i]=v0;
	}
	book[v0]=1;
	for(i=1;i<hh;i++)
	{
		min=INFINITY;
		for(j=1;j<=hh;j++)
		{
			if(book[j]==0&&dis[j]<min)
			{
				min=dis[j];
				u=j;
			}
		}
		book[u]=1;
		for(v=1;v<=hh;v++)
		{
			if(book[v]==0&&dis[v]>dis[u]+map[u][v])			//通过最近点更新其他边
			{
				p[v]=u;
				dis[v]=dis[u]+map[u][v];
			}
		}
	}
	v=s;
	i=1;
	while(p[v]!=v0)
	{
		l[i++]=p[v];
		v=p[v];
	}
	printf("\n");
	u=i-1;
	printf("路线为：\n");
	printf("%s--->",q[v0].name);
	for(i=u;i>=1;i--)
		printf("%s--->",q[l[i]].name);
	printf("%s\n",q[s].name);
	printf("最短路径长度为：%d 米\n",dis[s]);
}

void show1()
{
	int i=1,j=1,k=1,l=1;
	for(i=1;i<=7;i++)
	{
		for(j=1;j<=7;j++)
		{
			shortest[i][j]=map[i][j];
			path[i][j]=0;
		}
	}
    for(i=1;i<=7;i++)
	{
	    for(j=1;j<=7;j++)
		{
			if(shortest[i][j]<INFINITY&&i!=j)
			{
				printf("从%s到%s的路径为:%d米。\n",q[i].name,q[j].name,shortest[i][j]);
			}
			else if(i==j)
			{
				continue;
			}
			else
			{
				printf("从%s到%s没有路径\n",q[i].name,q[j].name);
			}
		}
	}
}

void tianjiadidian(){
    char na[100],info[999];
    int pb,weight,i;
    system("cls");
    printf("\t\t\t---- 请编辑添加地点的信息----");
    printf("\n\t\t\t  1.输入地点名称：");
    scanf("%s",na);
    printf("\n\t\t\t  2.输入地点简介：");
    scanf("%s",info);
    hh=hh+1;
    strcpy(q[hh].name,na);
    strcpy(q[hh].jieshao,info);
    printf("\n\t\t\t  3.请输入与%d.%s相连的地点编号：",hh,q[hh].name);
    while(1){
        scanf("%d",&pb);
    if(pb<1||pb>=hh){
        printf("\n\t\t\t  输入错误，请重新输入:");
        }
    else{
        printf("\n\t\t\t  4.请输入与%d.%s相连的地点路径权值：",hh,q[hh].name);
        break;
        }
    }
    scanf("%d",&weight);
    map[hh][pb]=map[pb][hh]=weight;
    for(i=1;i<pb;i++){
        map[i][hh]=map[hh][i]=INFINITY;
    }
    for(i=pb+1;i<hh;i++){
        map[i][hh]=map[hh][i]=INFINITY;
    }
    printf("添加成功!");
    printf("\n\n按回车键返回至导航系统界面\n\n");
    getchar();getchar();
    kaishidaohang2();
}

void tianjialuxian(){
    system("cls");
    view();
    int pb,weight,pa;
    printf("\n\n\t\t  1.输入第一个地点的编号：");
    scanf("%d",&pa);
    printf("\n\n\t\t  2.输入第二个地点的编号：");
    scanf("%d",&pb);
    printf("\n\n\t\t  3.输入此路径的权值：");
    scanf("%d",&weight);
    if(pa<1||pb<1||pa>hh||pb>hh){
        printf("这个边并不存在.\n");
    }
    else{
        map[pa][pb]=map[pb][pa]=weight;
        printf("添加成功!");
    }
    printf("\n\n按回车键返回至导航系统界面\n\n");
    getchar();getchar();
    kaishidaohang2();
}



void view()
{
	printf("\t --------------------------------------------------------------------------------------------------------- |\n");
	printf("\t|                           |                                   |                                          |\n ");
	printf("\t|                           |           4 邯郸音乐厅            |                                          |\n ");
    printf("\t|                           |                                   |                                          |\n ");
	printf("\t|                           |                                   |                                          |\n");
	printf("\t|======     ===========================       ========================================      ===============|\n");
	printf("\t|-----------     ||                                                         ||    ------------------       |\n");
	printf("\t|           |    ||         -----------------------------------             ||   |                  |      |\n");
	printf("\t|3 B座教学楼|              |                                   |                 |     7 体育馆     |      |\n");
	printf("\t|           |    ||        |                                                ||   |                  |      |\n");
	printf("\t|           |    ||        |            5 图书馆                            ||   |                  |      |\n");
	printf("\t|           |    ||        |                                   |            ||   |                  |      |\n");
	printf("\t|-----------     ||        |                                   |            ||    ------------------       |\n");
	printf("\t|                ||         ----------------   ----------------             ||                             |\n");
	printf("\t|======  ========||                                                         ||===========  ================|\n");
	printf("\t|                ||                                                         ||                             |\n");
	printf("\t|-----------     ||               **********************                    ||    ------------------       |\n");
	printf("\t|           |    ||             **                      **                  ||   |                  |      |\n");
	printf("\t|           |    ||            **                        **                 ||   |                  |      |\n");
	printf("\t|           |    ||           *          8 坤舆湖          *                ||   |                  |      |\n");
	printf("\t|2 A座教学楼|                  **                        **                      |     6 操场       |      |\n");
	printf("\t|           |    ||             **                      **                  ||   |                  |      |\n");
	printf("\t|           |    ||               **********************                    ||   |                  |      |\n");
	printf("\t|           |    ||                                                         ||   |                  |      |\n");
	printf("\t|-----------     ||                                                         ||    ------------------       |\n");
	printf("\t|======    ============================================================================     =============  |\n");
	printf("\t|                            -------------------------                                                     |\n");
	printf("\t|                           |         1 校门口        |                                                    |\n");
	printf("\t|                           |                         |                                                    |\n");
	printf("\t-----------------------------------------------------------------------------------------------------------|\n");
}

void admin(){
    printf("\n\n\n");
		printf("\t|*************************************************************************************|\n");
		printf("\t|                              欢迎使用校园导航系统                                   |\n");
		printf("\t|  请选择您需要的功能：                                                               |\n");
		printf("\t|            1.遍历所有景点；                                                         |\n");
		printf("\t|            2.查询任意景点信息：                                                     |\n");
		printf("\t|            3.查询任意两景点间的最短路径；                                           |\n");
		printf("\t|            4.查看直观路线图；                                                       |\n");
		printf("\t|            5.添加路线；                                                             |\n");
		printf("\t|            6.添加地点；                                                             |\n");
		printf("\t|            7.查看各点间路径；                                                       |\n");
		printf("\t|            8.返回；                                                                 |\n");
		printf("\t|                                                                                     |\n");
		printf("\t|*************************************************************************************|\n");
	printf("\n\n\n  ");
}

void user(){
    printf("\n\n\n");
		printf("\t|*************************************************************************************|\n");
		printf("\t|                              欢迎使用校园导航系统                                   |\n");
		printf("\t|  请选择您需要的功能：                                                               |\n");
		printf("\t|            1.遍历所有景点；                                                         |\n");
		printf("\t|            2.查询任意景点信息：                                                     |\n");
		printf("\t|            3.查询任意两景点间的最短路径；                                           |\n");
		printf("\t|            4.查看直观路线图；                                                       |\n");
		printf("\t|            5.查看各点间路径；                                                       |\n");
		printf("\t|            6.返回；                                                                 |\n");
		printf("\t|                                                                                     |\n");
		printf("\t|*************************************************************************************|\n");
	printf("\n\n\n  ");
}

void kaishidaohang1()
{
	int x,m,n,u,v,i,j,o;
	char c[100];
	system("cls");
	view();
	user();
	while(1)
	{
		scanf(" %d",&x);
		if(x==1)
		{
			v=chaxunfangshi(x);
			while(1)
			{
				if(v==1)
				{
					liebiao();
					printf("请输入当前所在景点编号：\n");
					scanf(" %d",&n);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							for(i=1;i<=hh;i++)
							{
								if(i!=n)
									Dijkstra(n,i);
							}
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang1();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点编号：\n");
							scanf("%d",&n);
						}
					}
					break;
				}
				else if(v==2)
				{
					liebiao();
					printf("请输入当前所在景点名称：\n");
					scanf("%s",c);
					n=bianhao(c);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							for(i=1;i<=hh;i++)
							{
								if(i!=n)
									Dijkstra(n,i);
							}
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang1();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点名称：\n");
							scanf("%s",c);
							n=bianhao(c);
						}
					}
					break;
				}
				else if(v==0)
				{
					kaishidaohang1();
					break;
				}
				else
				{
					printf("\n\n输入错误请重新输入！\n\n");
					scanf("%d",&v);
				}
			}
			break;
		}
		else if(x==2)
		{
			v=chaxunfangshi(x);
			while(1)
			{
				if(v==1)
				{
					liebiao();
					printf("请输入景点编号：\n");
					scanf("%d",&n);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							printf("\n\n%s\n\n%s\n\n",q[n].name,q[n].jieshao);
							printf("按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							admin();
							kaishidaohang1();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点编号：\n");
							scanf("%d",&n);
						}
					}
					break;
				}
				else if(v==2)
				{
					liebiao();
					printf("请输入景点名称：\n");
					scanf("%s",c);
					n=bianhao(c);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							printf("\n\n%s\n\n%s\n\n",q[n].name,q[n].jieshao);
							printf("按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang1();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点名称：\n");
							scanf("%s",c);
							n=bianhao(c);
						}
					}
					break;
				}
				else if(v==0)
				{
					kaishidaohang1();
					break;
				}
				else
				{
					printf("\n\n输入错误请重新输入！\n\n");
					scanf("%d",&v);
				}
			}
			break;
		}
		else if(x==3)
		{
			v=chaxunfangshi(x);
			while(1)
			{
				if(v==1)
				{
					liebiao();
					printf("请输入起点景点编号：\n");
					scanf("%d",&n);
					printf("\n请输入终点景点编号：\n");
					scanf("%d",&m);
					while(1)
					{
						if(n>=1&&n<=hh&&m>=1&&m<=hh&&n!=m)
						{
							Dijkstra(n,m);
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang1();
							break;
						}
						else
						{
							printf("\n输入不合法！请重新输入！\n\n");
							printf("请输入起点景点编号：\n");
							scanf("%d",&n);
							printf("\n请输入终点景点编号：\n");
							scanf("%d",&m);
						}
					}
					break;
				}
				else if(v==2)
				{
					liebiao();
					printf("请输入起点景点名称：\n");
					scanf("%s",c);
					n=bianhao(c);
					printf("\n请输入终点景点名称：\n");
					scanf("%s",c);
					m=bianhao(c);
					while(1)
					{
						if(n>=1&&n<=hh&&m>=1&&m<=hh&&n!=m)
						{
							floyd();
							show(n,m);
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang1();
							break;
						}
						else
						{
							printf("\n输入不合法！请重新输入！\n\n");
							printf("请输入起点名称：\n");
							scanf("%s",c);
							n=bianhao(c);
							printf("\n请输入终点名称：\n");
							scanf("%s",c);
							m=bianhao(c);
						}
					}
					break;
				}
				else if(v==0)
				{
					kaishidaohang1();
					break;
				}
				else
				{
					printf("\n\n输入错误请重新输入！\n\n");
					scanf("%d",&v);
				}
			}
			break;
		}
        else if(x==4){
            run();
		}
		else if(x==5){

		}
		else if(x==6)
		{
		    xuanze();
		    //一开始我用的break 后来发现退到首界面的时候需要输入两个3才能退出,于是查到了用exit
			exit(0);
		}
		else
		{
			printf("\n\n输入错误！请重新输入！\n");
		}
	}
}


void kaishidaohang2()
{
	int x,m,n,u,v,i,j,o;
	char c[100];
	system("cls");
	view();
    admin();
	while(1)
	{
		scanf(" %d",&x);
		if(x==1)
		{
			v=chaxunfangshi(x);
			while(1)
			{
				if(v==1)
				{
					liebiao();
					printf("请输入当前所在景点编号：\n");
					scanf(" %d",&n);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							for(i=1;i<=hh;i++)
							{
								if(i!=n)
									Dijkstra(n,i);
							}
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang2();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点编号：\n");
							scanf("%d",&n);
						}
					}
					break;
				}
				else if(v==2)
				{
					liebiao();
					printf("请输入当前所在景点名称：\n");
					scanf("%s",c);
					n=bianhao(c);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							for(i=1;i<=hh;i++)
							{
								if(i!=n)
									Dijkstra(n,i);
							}
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang2();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点名称：\n");
							scanf("%s",c);
							n=bianhao(c);
						}
					}
					break;
				}
				else if(v==0)
				{
					kaishidaohang2();
					break;
				}
				else
				{
					printf("\n\n输入错误请重新输入！\n\n");
					scanf("%d",&v);
				}
			}
			break;
		}
		else if(x==2)
		{
			v=chaxunfangshi(x);
			while(1)
			{
				if(v==1)
				{
					liebiao();
					printf("请输入景点编号：\n");
					scanf("%d",&n);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							printf("\n\n%s\n\n%s\n\n",q[n].name,q[n].jieshao);
							printf("按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							admin();
							kaishidaohang2();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点编号：\n");
							scanf("%d",&n);
						}
					}
					break;
				}
				else if(v==2)
				{
					liebiao();
					printf("请输入景点名称：\n");
					scanf("%s",c);
					n=bianhao(c);
					while(1)
					{
						if(n>=1&&n<=hh)
						{
							printf("\n\n%s\n\n%s\n\n",q[n].name,q[n].jieshao);
							printf("按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang2();
							break;
						}
						else
						{
							printf("\n该景点不存在！请重新输入景点名称：\n");
							scanf("%s",c);
							n=bianhao(c);
						}
					}
					break;
				}
				else if(v==0)
				{
					kaishidaohang2();
					break;
				}
				else
				{
					printf("\n\n输入错误请重新输入！\n\n");
					scanf("%d",&v);
				}
			}
			break;
		}
		else if(x==3)
		{
			v=chaxunfangshi(x);
			while(1)
			{
				if(v==1)
				{
					liebiao();
					printf("请输入起点景点编号：\n");
					scanf("%d",&n);
					printf("\n请输入终点景点编号：\n");
					scanf("%d",&m);
					while(1)
					{
						if(n>=1&&n<=hh&&m>=1&&m<=hh&&n!=m)
						{
							Dijkstra(n,m);
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang2();
							break;
						}
						else
						{
							printf("\n输入不合法！请重新输入！\n\n");
							printf("请输入起点景点编号：\n");
							scanf("%d",&n);
							printf("\n请输入终点景点编号：\n");
							scanf("%d",&m);
						}
					}
					break;
				}
				else if(v==2)
				{
					liebiao();
					printf("请输入起点景点名称：\n");
					scanf("%s",c);
					n=bianhao(c);
					printf("\n请输入终点景点名称：\n");
					scanf("%s",c);
					m=bianhao(c);
					while(1)
					{
						if(n>=1&&n<=hh&&m>=1&&m<=hh&&n!=m)
						{
							floyd();
							show(n,m);
							printf("\n\n按回车键返回至导航系统界面\n\n");
							getchar();getchar();
							kaishidaohang2();
							break;
						}
						else
						{
							printf("\n输入不合法！请重新输入！\n\n");
							printf("请输入起点名称：\n");
							scanf("%s",c);
							n=bianhao(c);
							printf("\n请输入终点名称：\n");
							scanf("%s",c);
							m=bianhao(c);
						}
					}
					break;
				}
				else if(v==0)
				{
					kaishidaohang2();
					break;
				}
				else
				{
					printf("\n\n输入错误请重新输入！\n\n");
					scanf("%d",&v);
				}
			}
			break;
		}
        else if(x==4){
            run();
		}
		else if(x==5){
            tianjialuxian();
		}
		else if(x==6){
            tianjiadidian();
		}
		else if(x==7){
            show1();
		}
		else if(x==8)
		{
		    xuanze();
			exit(0);
		}
		else
		{
			printf("\n\n输入错误！请重新输入！\n");
		}
	}
}


void regist(){
FILE* fp;
   char name[30];
   char n[8],n1[8];
   while (1) {
   	system("cls");
   	printf("请输入要创建的用户名:");
   	scanf("%s", name);
   	line();
   	printf("请输入密码(六位数字):");
   	scanf("%s", n);
   	line();
   	printf("请确认密码:");
   	scanf("%s", n1);
   	line();
   	if (strcmp(n ,n1)==0) {
   		if ((fp = fopen("regist.txt","w+")) == NULL) {
   			printf("注册失败");
   		}
   		fprintf(fp, "%s\t%s\n", name, n);
   		fclose(fp);
   		printf("\n用户创建成功...\n\n");
   		login();
   	}
   	else {
   		printf("两次密码输入不同，请重新设定密码!\n");
   	}
   }
}

void login(){
   system("cls");
   FILE* fp;
   int i = 5;
   char n1[8];
   char name1[30];
   if ((fp = fopen("regist.txt", "r+")) == NULL) {
   	    printf("暂无注册用户");
      	exit(1);
   }
   else {
   	char n2[8];
   	char name2[30];
   	fscanf(fp, "%s\t%s\n", name2, n2);
   	printf("请输入用户名:");
   	scanf("%s", name1);
   	if (strcmp(name2, name1) == 0){
   		while (1) {
   			printf("请输入密码:");
   			scanf("%s", n1);
   			if(strcmp(n2,n1)!=0){
   				i--;
   				printf("\n密码错误,还可尝试%d次\n", i);
   			}
   			else{
   				printf("\n输入正确,进入系统...\n\n");
   				kaishidaohang2();
   				line();
   				break;
   			}
   			if(i==0){
   				printf("错误次数过多，系统退出\n");
   				exit(0);
   			}

   		}
   	}else{
   		printf("无此用户名！！！\n");
   		login();
	}
   }
   fclose(fp);
}

void aaa(){
    int a,b,c;
    system("cls");
    printf("           1. 注册\n");
	printf("           2. 登录\n");
	while(1){
     scanf("%d",&a);
	 if(a==1){
        regist();
        break;
	 }
     else if(a==2){
        login();
        break;
     }
     else{
        printf("输入错误，请重新输入\n");
     }
	}
}

void xuanze(){
    int a;
    system("cls");
    printf("请选择用户或管理员:\n");
    printf("           1. 用户\n");
	printf("           2. 管理员\n");
	printf("           3. 退出\n");
	printf("请选择序号：");
		while(1){
		scanf("%d",&a);
		if(a==3){
            break;
		}
		switch(a){
		 	case 1: system("cls"); kaishidaohang1(); break;
			case 2: system("cls"); aaa(); break;
			default: printf("\n输入无效,请重新正确输入!!!     \n"); break;
		}
	}
}

int main()
{
    int o;
    //run();
    //system("color 8f");
	init();
	xuanze();
	return 0;
}

