#include <stdio.h>
#include <stdlib.h>

int E=0,F=0;
typedef struct node{
    char data;
    struct node *lchild,*rchild;
}node;

node* create(){
    node *T;
    char c;
    scanf(" %c",&c);
    if(c=='0'){
        T=NULL;
    }
    else{
        T=(node*)malloc(sizeof(node));
        T->data=c;
        T->lchild=create();
        T->rchild=create();
    }
    return T;
}

int similar(node *s,node *t){
    if(s==NULL&&t==NULL)
        return 1;
    else if(s==NULL||t==NULL){
        return 0;
    }
    else{
        return (similar(s->lchild,t->lchild)&&similar(s->rchild,t->rchild));
    }
}
//结构相同


int similar2(node *s,node *t){
    if(s==NULL&&t==NULL)
        return F;
    else if(s==NULL||t==NULL){
        return F;
    }
    else if(s->data==t->data&&s->data!='0'&&t->data!='0'){
        F=F+1;
        similar2(s->lchild,t->lchild);
        similar2(s->rchild,t->rchild);
        return F;
    }
    else{
        return (similar2(s->lchild,t->lchild)&&similar2(s->rchild,t->rchild));
    }
}


int len(node *T){
    if(T==NULL){
        return 0;
    }
    else{
       E=E+1;
       len(T->lchild);
       len(T->rchild);
    }
    return E;
}

int main(){
    node *M,*N;
    int a,b,c;
    M=create();
    N=create();
    a=similar(M,N);//结构不需要相同，这些都可以删除0.0
    b=similar2(M,N);
    c=len(M);
//    printf("%d  ",b);
//    printf("%d",a);
    if(b>=(c+1)/2){
        printf("1");
    }
    else{
        printf("0");
    }
}
